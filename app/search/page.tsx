import { PRICE, PrismaClient } from "@prisma/client";
import SearchHeader from "./components/Header";
import RestaurantCard from "./components/RestaurantCard";
import SearchSideBar from "./components/SearchSideBar";

export const metadata = {
  title: 'Search | OpenTable',
  description: 'Generated by create next app',
}

const prisma = new PrismaClient();

interface SearchParams { city?: string, cuisine?: string, price?: PRICE };

const fetchRestaurantsByCity = (searchParams: SearchParams) => {
  const where: any = {};
  
  if (searchParams.city) {
    const location = {
      name: {
        equals: searchParams.city.toLowerCase()
      }
    }
    where.location = location;
  }
  
  if (searchParams.cuisine) {
    const cuisine = {
      name: {
        equals: searchParams.cuisine.toLowerCase()
      }
    }
    where.cuisine = cuisine;
  }
  
  if (searchParams.price) {
    const price = {
      equals: searchParams.price
    }
    where.price = price;
  }

  const select = {
    id: true,
    name: true,
    main_image: true,
    price: true,
    cuisine: true,
    location: true,
    slug: true,
    reviews: true,
  }

  return prisma.restaurant.findMany({
    where,
    select,
  });
};

const fetchLocations = async () => {
  return prisma.location.findMany();
}

const fetchCuisines = async () => {
  return prisma.cuisine.findMany();
}

export default async function SearchPage({searchParams}:
  { searchParams: SearchParams
}) {
  // console.log({ props }) use to see props after SearchPage(props: any) above
  const restaurants = await fetchRestaurantsByCity(searchParams);
  const locations = await fetchLocations();
  const cuisines = await fetchCuisines();
  return (
    <>
      <SearchHeader />
      <div className="flex items-start justify-between w-2/3 py-4 m-auto">
        <SearchSideBar locations={locations} cuisines={cuisines} searchParams={searchParams}/>
        <div className="w-5/6">
          {restaurants.length ? (
            <>
              {restaurants.map(restaurant => (
                <RestaurantCard key={restaurant.id} restaurant={restaurant}/>
              ))}
            </>
          ) : (
            <p>Sorry, we found no restaurants in this area.</p>
          )}
        </div>
      </div>
    </>
  )
}